{
  "Comment": "A state machine that does mock transform zoom recording.",
  "StartAt": "Transform Zoom Recording Has Been Uploaded to s3",
  "States": {
    "Transform Zoom Recording Has Been Uploaded to s3": {
      "Type": "Task",
      "Resource": "${TransformRecordingFunctionArn}",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 15,
          "MaxAttempts": 5,
          "BackoffRate": 1.5
        }
      ],
      "Next": "Upload Zoom Recording Transformed To Specific S3 Folder"
    },
    "Upload Zoom Recording Transformed To Specific S3 Folder": {
      "Type": "Task",
      "Resource": "${UploadTransformedDataFunctionArn}",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 15,
          "MaxAttempts": 5,
          "BackoffRate": 1.5
        }
      ],
      "Next": "Update Zoom Recording State On Lawbite Backend Portal"
    },
    "Update Zoom Recording State On Lawbite Backend Portal": {
      "Type": "Task",
      "Resource": "${UpdateStateOnPortalFunctionArn}",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 1
        }
      ],
      "Next": "Remove Original Zoom Recording Format"
    },
    "Remove Original Zoom Recording Format": {
      "Type": "Task",
      "Resource": "${RemoveOriginalFormatFunctionArn}",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 1
        }
      ],
      "End": true
    }
  }
}
